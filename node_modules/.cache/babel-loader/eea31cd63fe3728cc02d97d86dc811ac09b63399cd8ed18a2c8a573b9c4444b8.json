{"ast":null,"code":"import axios from 'axios';\nimport { RISK_LEVELS, calculateRiskScore, mapToDataCollectionItems } from '../utils/riskAssessment';\n\n// Type for API response data collection items\n\n// Type for the enhanced analysis result\n\n// Helper function to convert DataCollectionItem to ApiDataCollectionItem\nfunction toApiDataCollectionItem(item) {\n  const {\n    type,\n    purpose,\n    category,\n    risk,\n    risk_score,\n    ...rest\n  } = item;\n  return {\n    type,\n    purpose,\n    category,\n    risk,\n    risk_score,\n    ...rest\n  };\n}\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'https://poliscan-backend-production.up.railway.app';\nconst HUGGINGFACE_API_URL = 'https://api-inference.huggingface.co/models/facebook/bart-large-mnli';\nconst HUGGINGFACE_API_KEY = process.env.REACT_APP_HUGGINGFACE_API_KEY;\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    ...(HUGGINGFACE_API_KEY ? {\n      'Authorization': `Bearer ${HUGGINGFACE_API_KEY}`\n    } : {})\n  }\n});\n\n// Add a request interceptor to include the auth token if it exists\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    // The request was made and the server responded with a status code\n    // that falls out of the range of 2xx\n    console.error('API Error:', error.response.data);\n    return Promise.reject(error.response.data);\n  } else if (error.request) {\n    // The request was made but no response was received\n    console.error('API Error:', error.request);\n    return Promise.reject({\n      message: 'No response from server'\n    });\n  } else {\n    // Something happened in setting up the request that triggered an Error\n    console.error('API Error:', error.message);\n    return Promise.reject({\n      message: error.message\n    });\n  }\n});\n// Analysis API\nexport const analyzePolicy = async text => {\n  try {\n    const response = await api.post('/analyze', {\n      text\n    });\n    return enhanceAnalysisWithRiskAssessment(response.data);\n  } catch (error) {\n    console.error('Error analyzing policy:', error);\n    throw error;\n  }\n};\nexport const analyzePolicyFromUrl = async url => {\n  try {\n    const response = await api.post('/analyze/url', {\n      url\n    });\n    return enhanceAnalysisWithRiskAssessment(response.data);\n  } catch (error) {\n    console.error('Error analyzing policy from URL:', error);\n    throw error;\n  }\n};\nexport const analyzePolicyFromPdf = async file => {\n  try {\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await api.post('/analyze/pdf', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return enhanceAnalysisWithRiskAssessment(response.data);\n  } catch (error) {\n    console.error('Error analyzing PDF policy:', error);\n    throw error;\n  }\n};\n\n// Enhance raw analysis with risk assessment\nfunction enhanceAnalysisWithRiskAssessment(rawAnalysis) {\n  var _Object$entries$find, _riskAssessment$facto, _riskAssessment$facto2, _riskAssessment$facto3, _riskAssessment$facto4, _riskAssessment$facto5;\n  // Map the raw analysis to our data model with default values\n  const dataCollectionItems = mapToDataCollectionItems(rawAnalysis).map(item => {\n    // Extract the base properties we want to ensure exist\n    const baseItem = {\n      type: item.type || 'unknown',\n      purpose: item.purpose || 'Not specified',\n      category: item.category || 'other',\n      risk: 'medium',\n      risk_score: 0,\n      sharedWithThirdParties: false,\n      securityMeasures: []\n    };\n\n    // Create the final item with defaults and override with any existing values\n    return {\n      ...baseItem,\n      ...item,\n      // Ensure arrays are properly initialized\n      securityMeasures: item.securityMeasures || []\n    };\n  });\n\n  // Convert to DataCollectionItem array for risk calculation\n  const riskItems = dataCollectionItems.map(item => {\n    var _item$sharedWithThird, _item$securityMeasure;\n    return {\n      ...item,\n      sharedWithThirdParties: (_item$sharedWithThird = item.sharedWithThirdParties) !== null && _item$sharedWithThird !== void 0 ? _item$sharedWithThird : false,\n      securityMeasures: (_item$securityMeasure = item.securityMeasures) !== null && _item$securityMeasure !== void 0 ? _item$securityMeasure : []\n    };\n  });\n\n  // Calculate risk score and get assessment\n  const riskAssessment = calculateRiskScore(riskItems);\n\n  // Get risk level details\n  const riskLevel = ((_Object$entries$find = Object.entries(RISK_LEVELS).find(([_, level]) => riskAssessment.score >= level.min && riskAssessment.score <= level.max)) === null || _Object$entries$find === void 0 ? void 0 : _Object$entries$find[1]) || RISK_LEVELS.low;\n\n  // Ensure risk_score is always a number\n  const finalRiskScore = typeof riskAssessment.score === 'number' ? riskAssessment.score : 0;\n\n  // Ensure risk_level is always defined with all required properties\n  const riskLevelInfo = {\n    level: riskAssessment.level || 'medium',\n    color: (riskLevel === null || riskLevel === void 0 ? void 0 : riskLevel.color) || '#FFA500',\n    // Orange as fallback color\n    label: (riskLevel === null || riskLevel === void 0 ? void 0 : riskLevel.label) || 'Medium Risk',\n    description: (riskLevel === null || riskLevel === void 0 ? void 0 : riskLevel.description) || 'Moderate privacy risk detected.'\n  };\n\n  // Ensure risk_factors is always defined with all required properties\n  const riskFactors = {\n    data_sensitivity: ((_riskAssessment$facto = riskAssessment.factors) === null || _riskAssessment$facto === void 0 ? void 0 : _riskAssessment$facto.dataSensitivity) || 0,\n    collection_context: ((_riskAssessment$facto2 = riskAssessment.factors) === null || _riskAssessment$facto2 === void 0 ? void 0 : _riskAssessment$facto2.collectionContext) || 0,\n    storage_security: ((_riskAssessment$facto3 = riskAssessment.factors) === null || _riskAssessment$facto3 === void 0 ? void 0 : _riskAssessment$facto3.storageSecurity) || 0,\n    data_sharing: ((_riskAssessment$facto4 = riskAssessment.factors) === null || _riskAssessment$facto4 === void 0 ? void 0 : _riskAssessment$facto4.dataSharing) || 0,\n    user_controls: ((_riskAssessment$facto5 = riskAssessment.factors) === null || _riskAssessment$facto5 === void 0 ? void 0 : _riskAssessment$facto5.userControls) || 0\n  };\n\n  // Ensure raw_analysis is always defined\n  const rawAnalysisData = rawAnalysis || {};\n\n  // Return the enhanced analysis result\n  const result = {\n    ...rawAnalysisData,\n    data_collection: dataCollectionItems,\n    risk_score: finalRiskScore,\n    risk_level: riskLevelInfo,\n    risk_factors: riskFactors,\n    recommendations: riskAssessment.recommendations || [],\n    raw_analysis: rawAnalysisData // Ensure raw_analysis is always defined\n  };\n  return result;\n}\n\n// Mock analysis for development\nexport const mockAnalyzePolicy = async text => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const mockData = {\n        risk_score: Math.floor(Math.random() * 100),\n        data_collection: [{\n          type: 'Location Data',\n          purpose: 'Provide location-based services',\n          category: 'preciseLocation',\n          sharedWithThirdParties: true,\n          securityMeasures: ['Encryption in transit']\n        }, {\n          type: 'Email Address',\n          purpose: 'Account creation and communication',\n          category: 'email',\n          sharedWithThirdParties: false,\n          securityMeasures: ['Hashed storage', 'Access controls']\n        }, {\n          type: 'Usage Data',\n          purpose: 'Improve our services',\n          category: 'appUsage',\n          sharedWithThirdParties: true,\n          securityMeasures: ['Anonymization', 'Aggregation']\n        }]\n      };\n      resolve(enhanceAnalysisWithRiskAssessment(mockData));\n    }, 1500);\n  });\n};\nconst getPurposeForLabel = label => {\n  const purposes = {\n    'data collection': 'Collecting user information',\n    'data sharing': 'Sharing data with third parties',\n    'data retention': 'Storing user data',\n    'user rights': 'User rights and controls',\n    'cookies': 'Using cookies and tracking technologies',\n    'third-party services': 'Integrating with third-party services',\n    'security measures': 'Protecting user data',\n    'international transfers': 'Transferring data internationally'\n  };\n  return purposes[label] || 'General data processing';\n};\n\n// Helper function to get explanation for a label and score\nconst getExplanationForLabel = (label, score) => {\n  const explanations = {\n    'data collection': `The policy ${score > 0.7 ? 'extensively collects' : score > 0.4 ? 'collects' : 'minimally collects'} user data.`,\n    'data sharing': `Data is ${score > 0.7 ? 'widely shared' : score > 0.4 ? 'shared' : 'rarely shared'} with third parties.`,\n    'data retention': `User data is ${score > 0.7 ? 'stored indefinitely' : score > 0.4 ? 'retained for extended periods' : 'kept only as long as necessary'}.`,\n    'user rights': `Users have ${score > 0.7 ? 'limited' : score > 0.4 ? 'some' : 'strong'} control over their data.`,\n    'cookies': `The site uses ${score > 0.7 ? 'extensive tracking' : score > 0.4 ? 'some tracking' : 'minimal tracking'} technologies.`,\n    'third-party services': `The policy involves ${score > 0.7 ? 'many' : score > 0.4 ? 'some' : 'few'} third-party services.`,\n    'security measures': `Data security is ${score > 0.7 ? 'minimally' : score > 0.4 ? 'adequately' : 'strongly'} addressed.`,\n    'international transfers': `Data is ${score > 0.7 ? 'frequently' : score > 0.4 ? 'sometimes' : 'rarely'} transferred internationally.`\n  };\n  return explanations[label] || 'This aspect is addressed in the policy.';\n};\n\n// Helper function to get top concerns\nconst getTopConcerns = (labels, scores, count) => {\n  const indexedScores = labels.map((label, index) => ({\n    label,\n    score: scores[index]\n  }));\n  return indexedScores.sort((a, b) => b.score - a.score).slice(0, count).map(item => item.label);\n};","map":{"version":3,"names":["axios","RISK_LEVELS","calculateRiskScore","mapToDataCollectionItems","toApiDataCollectionItem","item","type","purpose","category","risk","risk_score","rest","API_BASE_URL","process","env","REACT_APP_API_URL","HUGGINGFACE_API_URL","HUGGINGFACE_API_KEY","REACT_APP_HUGGINGFACE_API_KEY","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","console","data","message","analyzePolicy","text","post","enhanceAnalysisWithRiskAssessment","analyzePolicyFromUrl","url","analyzePolicyFromPdf","file","formData","FormData","append","rawAnalysis","_Object$entries$find","_riskAssessment$facto","_riskAssessment$facto2","_riskAssessment$facto3","_riskAssessment$facto4","_riskAssessment$facto5","dataCollectionItems","map","baseItem","sharedWithThirdParties","securityMeasures","riskItems","_item$sharedWithThird","_item$securityMeasure","riskAssessment","riskLevel","Object","entries","find","_","level","score","min","max","low","finalRiskScore","riskLevelInfo","color","label","description","riskFactors","data_sensitivity","factors","dataSensitivity","collection_context","collectionContext","storage_security","storageSecurity","data_sharing","dataSharing","user_controls","userControls","rawAnalysisData","result","data_collection","risk_level","risk_factors","recommendations","raw_analysis","mockAnalyzePolicy","resolve","setTimeout","mockData","Math","floor","random","getPurposeForLabel","purposes","getExplanationForLabel","explanations","getTopConcerns","labels","scores","count","indexedScores","index","sort","a","b","slice"],"sources":["C:/Users/asus/CascadeProjects/poliscan/src/services/api.ts"],"sourcesContent":["import axios, { AxiosResponse } from 'axios';\nimport type { AnalysisResult as AnalysisResultType, DataCollectionItem } from '../types/analysis';\nimport { \n  RISK_WEIGHTS, \n  RISK_LEVELS, \n  calculateRiskScore, \n  mapToDataCollectionItems \n} from '../utils/riskAssessment';\n\n// Type for API response data collection items\ntype ApiDataCollectionItem = {\n  type: string;\n  purpose: string;\n  category: string;\n  risk: 'low' | 'medium' | 'high' | 'critical';\n  risk_score: number;\n  sharedWithThirdParties: boolean;\n  securityMeasures: string[];\n  [key: string]: any;\n};\n\n// Type for the enhanced analysis result\ntype ApiAnalysisResult = Omit<AnalysisResultType, 'data_collection' | 'risk_level' | 'risk_factors' | 'recommendations' | 'raw_analysis'> & {\n  data_collection: ApiDataCollectionItem[];\n  risk_score: number; // Ensure risk_score is required\n  risk_level: { // Ensure risk_level is required with all its properties\n    level: 'low' | 'medium' | 'high' | 'critical';\n    color: string;\n    label: string;\n    description: string;\n  };\n  risk_factors: { // Ensure risk_factors is required with all its properties\n    data_sensitivity: number;\n    collection_context: number;\n    storage_security: number;\n    data_sharing: number;\n    user_controls: number;\n  };\n  recommendations: string[]; // Ensure recommendations is required and always an array\n  raw_analysis: any; // Ensure raw_analysis is always defined\n  [key: string]: any; // Allow additional properties\n};\n\n// Helper function to convert DataCollectionItem to ApiDataCollectionItem\nfunction toApiDataCollectionItem(item: DataCollectionItem): ApiDataCollectionItem {\n  const { type, purpose, category, risk, risk_score, ...rest } = item;\n  return {\n    type,\n    purpose,\n    category,\n    risk,\n    risk_score,\n    ...rest\n  };\n}\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'https://poliscan-backend-production.up.railway.app';\nconst HUGGINGFACE_API_URL = 'https://api-inference.huggingface.co/models/facebook/bart-large-mnli';\nconst HUGGINGFACE_API_KEY = process.env.REACT_APP_HUGGINGFACE_API_KEY;\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    ...(HUGGINGFACE_API_KEY ? { 'Authorization': `Bearer ${HUGGINGFACE_API_KEY}` } : {}),\n  },\n});\n\n// Add a request interceptor to include the auth token if it exists\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.error('API Error:', error.response.data);\n      return Promise.reject(error.response.data);\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.error('API Error:', error.request);\n      return Promise.reject({ message: 'No response from server' });\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.error('API Error:', error.message);\n      return Promise.reject({ message: error.message });\n    }\n  }\n);\n\ninterface AnalysisResult {\n  risk_score: number;\n  risk_level: {\n    level: 'low' | 'medium' | 'high' | 'critical';\n    color: string;\n    label: string;\n    description: string;\n  };\n  data_collection: Array<{\n    type: string;\n    purpose: string;\n    category: string;\n    risk: 'low' | 'medium' | 'high' | 'critical';\n    risk_score: number;\n    recommendations?: string[];\n  }>;\n  risk_factors: {\n    data_sensitivity: number;\n    collection_context: number;\n    storage_security: number;\n    data_sharing: number;\n    user_controls: number;\n  };\n  recommendations: string[];\n  raw_analysis: any;\n}\n\n// Analysis API\nexport const analyzePolicy = async (text: string): Promise<AnalysisResult> => {\n  try {\n    const response = await api.post('/analyze', { text });\n    return enhanceAnalysisWithRiskAssessment(response.data);\n  } catch (error) {\n    console.error('Error analyzing policy:', error);\n    throw error;\n  }\n};\n\nexport const analyzePolicyFromUrl = async (url: string): Promise<AnalysisResult> => {\n  try {\n    const response = await api.post('/analyze/url', { url });\n    return enhanceAnalysisWithRiskAssessment(response.data);\n  } catch (error) {\n    console.error('Error analyzing policy from URL:', error);\n    throw error;\n  }\n};\n\nexport const analyzePolicyFromPdf = async (file: File): Promise<AnalysisResult> => {\n  try {\n    const formData = new FormData();\n    formData.append('file', file);\n    \n    const response = await api.post('/analyze/pdf', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    \n    return enhanceAnalysisWithRiskAssessment(response.data);\n  } catch (error) {\n    console.error('Error analyzing PDF policy:', error);\n    throw error;\n  }\n};\n\n// Enhance raw analysis with risk assessment\nfunction enhanceAnalysisWithRiskAssessment(rawAnalysis: any): ApiAnalysisResult {\n  // Map the raw analysis to our data model with default values\n  const dataCollectionItems = mapToDataCollectionItems(rawAnalysis).map(item => {\n    // Extract the base properties we want to ensure exist\n    const baseItem = {\n      type: item.type || 'unknown',\n      purpose: item.purpose || 'Not specified',\n      category: item.category || 'other',\n      risk: 'medium' as const,\n      risk_score: 0,\n      sharedWithThirdParties: false,\n      securityMeasures: [] as string[],\n    };\n\n    // Create the final item with defaults and override with any existing values\n    return {\n      ...baseItem,\n      ...item,\n      // Ensure arrays are properly initialized\n      securityMeasures: item.securityMeasures || []\n    } as ApiDataCollectionItem;\n  });\n  \n  // Convert to DataCollectionItem array for risk calculation\n  const riskItems = dataCollectionItems.map(item => ({\n    ...item,\n    sharedWithThirdParties: item.sharedWithThirdParties ?? false,\n    securityMeasures: item.securityMeasures ?? []\n  } as DataCollectionItem));\n  \n  // Calculate risk score and get assessment\n  const riskAssessment = calculateRiskScore(riskItems);\n  \n  // Get risk level details\n  const riskLevel = Object.entries(RISK_LEVELS).find(([_, level]) => \n    riskAssessment.score >= level.min && riskAssessment.score <= level.max\n  )?.[1] || RISK_LEVELS.low;\n\n  // Ensure risk_score is always a number\n  const finalRiskScore = typeof riskAssessment.score === 'number' ? riskAssessment.score : 0;\n  \n  // Ensure risk_level is always defined with all required properties\n  const riskLevelInfo = {\n    level: riskAssessment.level || 'medium',\n    color: riskLevel?.color || '#FFA500', // Orange as fallback color\n    label: riskLevel?.label || 'Medium Risk',\n    description: riskLevel?.description || 'Moderate privacy risk detected.'\n  };\n  \n  // Ensure risk_factors is always defined with all required properties\n  const riskFactors = {\n    data_sensitivity: riskAssessment.factors?.dataSensitivity || 0,\n    collection_context: riskAssessment.factors?.collectionContext || 0,\n    storage_security: riskAssessment.factors?.storageSecurity || 0,\n    data_sharing: riskAssessment.factors?.dataSharing || 0,\n    user_controls: riskAssessment.factors?.userControls || 0\n  };\n  \n  // Ensure raw_analysis is always defined\n  const rawAnalysisData = rawAnalysis || {};\n  \n  // Return the enhanced analysis result\n  const result: ApiAnalysisResult = {\n    ...rawAnalysisData,\n    data_collection: dataCollectionItems,\n    risk_score: finalRiskScore,\n    risk_level: riskLevelInfo,\n    risk_factors: riskFactors,\n    recommendations: riskAssessment.recommendations || [],\n    raw_analysis: rawAnalysisData // Ensure raw_analysis is always defined\n  };\n  \n  return result;\n}\n\n// Mock analysis for development\nexport const mockAnalyzePolicy = async (text: string): Promise<AnalysisResult> => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      const mockData = {\n        risk_score: Math.floor(Math.random() * 100),\n        data_collection: [\n          { \n            type: 'Location Data', \n            purpose: 'Provide location-based services',\n            category: 'preciseLocation',\n            sharedWithThirdParties: true,\n            securityMeasures: ['Encryption in transit']\n          },\n          { \n            type: 'Email Address', \n            purpose: 'Account creation and communication',\n            category: 'email',\n            sharedWithThirdParties: false,\n            securityMeasures: ['Hashed storage', 'Access controls']\n          },\n          { \n            type: 'Usage Data', \n            purpose: 'Improve our services',\n            category: 'appUsage',\n            sharedWithThirdParties: true,\n            securityMeasures: ['Anonymization', 'Aggregation']\n          },\n        ],\n      };\n      \n      resolve(enhanceAnalysisWithRiskAssessment(mockData));\n    }, 1500);\n  });\n};\n\nconst getPurposeForLabel = (label: string): string => {\n  const purposes: Record<string, string> = {\n    'data collection': 'Collecting user information',\n    'data sharing': 'Sharing data with third parties',\n    'data retention': 'Storing user data',\n    'user rights': 'User rights and controls',\n    'cookies': 'Using cookies and tracking technologies',\n    'third-party services': 'Integrating with third-party services',\n    'security measures': 'Protecting user data',\n    'international transfers': 'Transferring data internationally'\n  };\n  \n  return purposes[label] || 'General data processing';\n};\n\n// Helper function to get explanation for a label and score\nconst getExplanationForLabel = (label: string, score: number): string => {\n  const explanations: Record<string, string> = {\n    'data collection': `The policy ${score > 0.7 ? 'extensively collects' : score > 0.4 ? 'collects' : 'minimally collects'} user data.`,\n    'data sharing': `Data is ${score > 0.7 ? 'widely shared' : score > 0.4 ? 'shared' : 'rarely shared'} with third parties.`,\n    'data retention': `User data is ${score > 0.7 ? 'stored indefinitely' : score > 0.4 ? 'retained for extended periods' : 'kept only as long as necessary'}.`,\n    'user rights': `Users have ${score > 0.7 ? 'limited' : score > 0.4 ? 'some' : 'strong'} control over their data.`,\n    'cookies': `The site uses ${score > 0.7 ? 'extensive tracking' : score > 0.4 ? 'some tracking' : 'minimal tracking'} technologies.`,\n    'third-party services': `The policy involves ${score > 0.7 ? 'many' : score > 0.4 ? 'some' : 'few'} third-party services.`,\n    'security measures': `Data security is ${score > 0.7 ? 'minimally' : score > 0.4 ? 'adequately' : 'strongly'} addressed.`,\n    'international transfers': `Data is ${score > 0.7 ? 'frequently' : score > 0.4 ? 'sometimes' : 'rarely'} transferred internationally.`\n  };\n  \n  return explanations[label] || 'This aspect is addressed in the policy.';\n};\n\n// Helper function to get top concerns\nconst getTopConcerns = (labels: string[], scores: number[], count: number): string[] => {\n  const indexedScores = labels.map((label, index) => ({\n    label,\n    score: scores[index]\n  }));\n  \n  return indexedScores\n    .sort((a, b) => b.score - a.score)\n    .slice(0, count)\n    .map(item => item.label);\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAyB,OAAO;AAE5C,SAEEC,WAAW,EACXC,kBAAkB,EAClBC,wBAAwB,QACnB,yBAAyB;;AAEhC;;AAYA;;AAsBA;AACA,SAASC,uBAAuBA,CAACC,IAAwB,EAAyB;EAChF,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,IAAI;IAAEC,UAAU;IAAE,GAAGC;EAAK,CAAC,GAAGN,IAAI;EACnE,OAAO;IACLC,IAAI;IACJC,OAAO;IACPC,QAAQ;IACRC,IAAI;IACJC,UAAU;IACV,GAAGC;EACL,CAAC;AACH;AAEA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,oDAAoD;AAC1G,MAAMC,mBAAmB,GAAG,sEAAsE;AAClG,MAAMC,mBAAmB,GAAGJ,OAAO,CAACC,GAAG,CAACI,6BAA6B;AAErE,MAAMC,GAAG,GAAGnB,KAAK,CAACoB,MAAM,CAAC;EACvBC,OAAO,EAAET,YAAY;EACrBU,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClC,IAAIL,mBAAmB,GAAG;MAAE,eAAe,EAAE,UAAUA,mBAAmB;IAAG,CAAC,GAAG,CAAC,CAAC;EACrF;AACF,CAAC,CAAC;;AAEF;AACAE,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EACT,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAClB;IACA;IACAC,OAAO,CAACJ,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACG,QAAQ,CAACE,IAAI,CAAC;IAChD,OAAOJ,OAAO,CAACC,MAAM,CAACF,KAAK,CAACG,QAAQ,CAACE,IAAI,CAAC;EAC5C,CAAC,MAAM,IAAIL,KAAK,CAACP,OAAO,EAAE;IACxB;IACAW,OAAO,CAACJ,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACP,OAAO,CAAC;IAC1C,OAAOQ,OAAO,CAACC,MAAM,CAAC;MAAEI,OAAO,EAAE;IAA0B,CAAC,CAAC;EAC/D,CAAC,MAAM;IACL;IACAF,OAAO,CAACJ,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACM,OAAO,CAAC;IAC1C,OAAOL,OAAO,CAACC,MAAM,CAAC;MAAEI,OAAO,EAAEN,KAAK,CAACM;IAAQ,CAAC,CAAC;EACnD;AACF,CACF,CAAC;AA6BD;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,IAAY,IAA8B;EAC5E,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMf,GAAG,CAACqB,IAAI,CAAC,UAAU,EAAE;MAAED;IAAK,CAAC,CAAC;IACrD,OAAOE,iCAAiC,CAACP,QAAQ,CAACE,IAAI,CAAC;EACzD,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdI,OAAO,CAACJ,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMW,oBAAoB,GAAG,MAAOC,GAAW,IAA8B;EAClF,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMf,GAAG,CAACqB,IAAI,CAAC,cAAc,EAAE;MAAEG;IAAI,CAAC,CAAC;IACxD,OAAOF,iCAAiC,CAACP,QAAQ,CAACE,IAAI,CAAC;EACzD,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdI,OAAO,CAACJ,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMa,oBAAoB,GAAG,MAAOC,IAAU,IAA8B;EACjF,IAAI;IACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAE7B,MAAMX,QAAQ,GAAG,MAAMf,GAAG,CAACqB,IAAI,CAAC,cAAc,EAAEM,QAAQ,EAAE;MACxDxB,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,OAAOmB,iCAAiC,CAACP,QAAQ,CAACE,IAAI,CAAC;EACzD,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdI,OAAO,CAACJ,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,SAASU,iCAAiCA,CAACQ,WAAgB,EAAqB;EAAA,IAAAC,oBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EAC9E;EACA,MAAMC,mBAAmB,GAAGrD,wBAAwB,CAAC8C,WAAW,CAAC,CAACQ,GAAG,CAACpD,IAAI,IAAI;IAC5E;IACA,MAAMqD,QAAQ,GAAG;MACfpD,IAAI,EAAED,IAAI,CAACC,IAAI,IAAI,SAAS;MAC5BC,OAAO,EAAEF,IAAI,CAACE,OAAO,IAAI,eAAe;MACxCC,QAAQ,EAAEH,IAAI,CAACG,QAAQ,IAAI,OAAO;MAClCC,IAAI,EAAE,QAAiB;MACvBC,UAAU,EAAE,CAAC;MACbiD,sBAAsB,EAAE,KAAK;MAC7BC,gBAAgB,EAAE;IACpB,CAAC;;IAED;IACA,OAAO;MACL,GAAGF,QAAQ;MACX,GAAGrD,IAAI;MACP;MACAuD,gBAAgB,EAAEvD,IAAI,CAACuD,gBAAgB,IAAI;IAC7C,CAAC;EACH,CAAC,CAAC;;EAEF;EACA,MAAMC,SAAS,GAAGL,mBAAmB,CAACC,GAAG,CAACpD,IAAI;IAAA,IAAAyD,qBAAA,EAAAC,qBAAA;IAAA,OAAK;MACjD,GAAG1D,IAAI;MACPsD,sBAAsB,GAAAG,qBAAA,GAAEzD,IAAI,CAACsD,sBAAsB,cAAAG,qBAAA,cAAAA,qBAAA,GAAI,KAAK;MAC5DF,gBAAgB,GAAAG,qBAAA,GAAE1D,IAAI,CAACuD,gBAAgB,cAAAG,qBAAA,cAAAA,qBAAA,GAAI;IAC7C,CAAC;EAAA,CAAuB,CAAC;;EAEzB;EACA,MAAMC,cAAc,GAAG9D,kBAAkB,CAAC2D,SAAS,CAAC;;EAEpD;EACA,MAAMI,SAAS,GAAG,EAAAf,oBAAA,GAAAgB,MAAM,CAACC,OAAO,CAAClE,WAAW,CAAC,CAACmE,IAAI,CAAC,CAAC,CAACC,CAAC,EAAEC,KAAK,CAAC,KAC5DN,cAAc,CAACO,KAAK,IAAID,KAAK,CAACE,GAAG,IAAIR,cAAc,CAACO,KAAK,IAAID,KAAK,CAACG,GACrE,CAAC,cAAAvB,oBAAA,uBAFiBA,oBAAA,CAEd,CAAC,CAAC,KAAIjD,WAAW,CAACyE,GAAG;;EAEzB;EACA,MAAMC,cAAc,GAAG,OAAOX,cAAc,CAACO,KAAK,KAAK,QAAQ,GAAGP,cAAc,CAACO,KAAK,GAAG,CAAC;;EAE1F;EACA,MAAMK,aAAa,GAAG;IACpBN,KAAK,EAAEN,cAAc,CAACM,KAAK,IAAI,QAAQ;IACvCO,KAAK,EAAE,CAAAZ,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEY,KAAK,KAAI,SAAS;IAAE;IACtCC,KAAK,EAAE,CAAAb,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEa,KAAK,KAAI,aAAa;IACxCC,WAAW,EAAE,CAAAd,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEc,WAAW,KAAI;EACzC,CAAC;;EAED;EACA,MAAMC,WAAW,GAAG;IAClBC,gBAAgB,EAAE,EAAA9B,qBAAA,GAAAa,cAAc,CAACkB,OAAO,cAAA/B,qBAAA,uBAAtBA,qBAAA,CAAwBgC,eAAe,KAAI,CAAC;IAC9DC,kBAAkB,EAAE,EAAAhC,sBAAA,GAAAY,cAAc,CAACkB,OAAO,cAAA9B,sBAAA,uBAAtBA,sBAAA,CAAwBiC,iBAAiB,KAAI,CAAC;IAClEC,gBAAgB,EAAE,EAAAjC,sBAAA,GAAAW,cAAc,CAACkB,OAAO,cAAA7B,sBAAA,uBAAtBA,sBAAA,CAAwBkC,eAAe,KAAI,CAAC;IAC9DC,YAAY,EAAE,EAAAlC,sBAAA,GAAAU,cAAc,CAACkB,OAAO,cAAA5B,sBAAA,uBAAtBA,sBAAA,CAAwBmC,WAAW,KAAI,CAAC;IACtDC,aAAa,EAAE,EAAAnC,sBAAA,GAAAS,cAAc,CAACkB,OAAO,cAAA3B,sBAAA,uBAAtBA,sBAAA,CAAwBoC,YAAY,KAAI;EACzD,CAAC;;EAED;EACA,MAAMC,eAAe,GAAG3C,WAAW,IAAI,CAAC,CAAC;;EAEzC;EACA,MAAM4C,MAAyB,GAAG;IAChC,GAAGD,eAAe;IAClBE,eAAe,EAAEtC,mBAAmB;IACpC9C,UAAU,EAAEiE,cAAc;IAC1BoB,UAAU,EAAEnB,aAAa;IACzBoB,YAAY,EAAEhB,WAAW;IACzBiB,eAAe,EAAEjC,cAAc,CAACiC,eAAe,IAAI,EAAE;IACrDC,YAAY,EAAEN,eAAe,CAAC;EAChC,CAAC;EAED,OAAOC,MAAM;AACf;;AAEA;AACA,OAAO,MAAMM,iBAAiB,GAAG,MAAO5D,IAAY,IAA8B;EAChF,OAAO,IAAIP,OAAO,CAAEoE,OAAO,IAAK;IAC9BC,UAAU,CAAC,MAAM;MACf,MAAMC,QAAQ,GAAG;QACf5F,UAAU,EAAE6F,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;QAC3CX,eAAe,EAAE,CACf;UACExF,IAAI,EAAE,eAAe;UACrBC,OAAO,EAAE,iCAAiC;UAC1CC,QAAQ,EAAE,iBAAiB;UAC3BmD,sBAAsB,EAAE,IAAI;UAC5BC,gBAAgB,EAAE,CAAC,uBAAuB;QAC5C,CAAC,EACD;UACEtD,IAAI,EAAE,eAAe;UACrBC,OAAO,EAAE,oCAAoC;UAC7CC,QAAQ,EAAE,OAAO;UACjBmD,sBAAsB,EAAE,KAAK;UAC7BC,gBAAgB,EAAE,CAAC,gBAAgB,EAAE,iBAAiB;QACxD,CAAC,EACD;UACEtD,IAAI,EAAE,YAAY;UAClBC,OAAO,EAAE,sBAAsB;UAC/BC,QAAQ,EAAE,UAAU;UACpBmD,sBAAsB,EAAE,IAAI;UAC5BC,gBAAgB,EAAE,CAAC,eAAe,EAAE,aAAa;QACnD,CAAC;MAEL,CAAC;MAEDwC,OAAO,CAAC3D,iCAAiC,CAAC6D,QAAQ,CAAC,CAAC;IACtD,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,CAAC;AACJ,CAAC;AAED,MAAMI,kBAAkB,GAAI5B,KAAa,IAAa;EACpD,MAAM6B,QAAgC,GAAG;IACvC,iBAAiB,EAAE,6BAA6B;IAChD,cAAc,EAAE,iCAAiC;IACjD,gBAAgB,EAAE,mBAAmB;IACrC,aAAa,EAAE,0BAA0B;IACzC,SAAS,EAAE,yCAAyC;IACpD,sBAAsB,EAAE,uCAAuC;IAC/D,mBAAmB,EAAE,sBAAsB;IAC3C,yBAAyB,EAAE;EAC7B,CAAC;EAED,OAAOA,QAAQ,CAAC7B,KAAK,CAAC,IAAI,yBAAyB;AACrD,CAAC;;AAED;AACA,MAAM8B,sBAAsB,GAAGA,CAAC9B,KAAa,EAAEP,KAAa,KAAa;EACvE,MAAMsC,YAAoC,GAAG;IAC3C,iBAAiB,EAAE,cAActC,KAAK,GAAG,GAAG,GAAG,sBAAsB,GAAGA,KAAK,GAAG,GAAG,GAAG,UAAU,GAAG,oBAAoB,aAAa;IACpI,cAAc,EAAE,WAAWA,KAAK,GAAG,GAAG,GAAG,eAAe,GAAGA,KAAK,GAAG,GAAG,GAAG,QAAQ,GAAG,eAAe,sBAAsB;IACzH,gBAAgB,EAAE,gBAAgBA,KAAK,GAAG,GAAG,GAAG,qBAAqB,GAAGA,KAAK,GAAG,GAAG,GAAG,+BAA+B,GAAG,gCAAgC,GAAG;IAC3J,aAAa,EAAE,cAAcA,KAAK,GAAG,GAAG,GAAG,SAAS,GAAGA,KAAK,GAAG,GAAG,GAAG,MAAM,GAAG,QAAQ,2BAA2B;IACjH,SAAS,EAAE,iBAAiBA,KAAK,GAAG,GAAG,GAAG,oBAAoB,GAAGA,KAAK,GAAG,GAAG,GAAG,eAAe,GAAG,kBAAkB,gBAAgB;IACnI,sBAAsB,EAAE,uBAAuBA,KAAK,GAAG,GAAG,GAAG,MAAM,GAAGA,KAAK,GAAG,GAAG,GAAG,MAAM,GAAG,KAAK,wBAAwB;IAC1H,mBAAmB,EAAE,oBAAoBA,KAAK,GAAG,GAAG,GAAG,WAAW,GAAGA,KAAK,GAAG,GAAG,GAAG,YAAY,GAAG,UAAU,aAAa;IACzH,yBAAyB,EAAE,WAAWA,KAAK,GAAG,GAAG,GAAG,YAAY,GAAGA,KAAK,GAAG,GAAG,GAAG,WAAW,GAAG,QAAQ;EACzG,CAAC;EAED,OAAOsC,YAAY,CAAC/B,KAAK,CAAC,IAAI,yCAAyC;AACzE,CAAC;;AAED;AACA,MAAMgC,cAAc,GAAGA,CAACC,MAAgB,EAAEC,MAAgB,EAAEC,KAAa,KAAe;EACtF,MAAMC,aAAa,GAAGH,MAAM,CAACtD,GAAG,CAAC,CAACqB,KAAK,EAAEqC,KAAK,MAAM;IAClDrC,KAAK;IACLP,KAAK,EAAEyC,MAAM,CAACG,KAAK;EACrB,CAAC,CAAC,CAAC;EAEH,OAAOD,aAAa,CACjBE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC/C,KAAK,GAAG8C,CAAC,CAAC9C,KAAK,CAAC,CACjCgD,KAAK,CAAC,CAAC,EAAEN,KAAK,CAAC,CACfxD,GAAG,CAACpD,IAAI,IAAIA,IAAI,CAACyE,KAAK,CAAC;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}