{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport { analyzePolicyFromUrl, analyzePolicyFromPdf } from '../services/api';\nexport const usePolicyAnalysis = () => {\n  _s();\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [error, setError] = useState(null);\n  const analyzeUrl = useCallback(async url => {\n    try {\n      setIsAnalyzing(true);\n      setError(null);\n      const result = await analyzePolicyFromUrl(url);\n      setAnalysisResult(result);\n      return result;\n    } catch (err) {\n      const error = err instanceof Error ? err : new Error('Failed to analyze URL');\n      setError(error);\n      throw error;\n    } finally {\n      setIsAnalyzing(false);\n    }\n  }, []);\n  const analyzeFile = useCallback(async file => {\n    try {\n      setIsAnalyzing(true);\n      setError(null);\n      const result = await analyzePolicyFromPdf(file);\n      setAnalysisResult(result);\n      return result;\n    } catch (err) {\n      const error = err instanceof Error ? err : new Error('Failed to analyze file');\n      setError(error);\n      throw error;\n    } finally {\n      setIsAnalyzing(false);\n    }\n  }, []);\n  const reset = useCallback(() => {\n    setAnalysisResult(null);\n    setError(null);\n  }, []);\n  return {\n    isAnalyzing,\n    analysisResult,\n    error,\n    analyzeUrl,\n    analyzeFile,\n    reset\n  };\n};\n_s(usePolicyAnalysis, \"54xw39iVjzV0SVKEd6QGXsoJYI0=\");\nexport default usePolicyAnalysis;","map":{"version":3,"names":["useState","useCallback","analyzePolicyFromUrl","analyzePolicyFromPdf","usePolicyAnalysis","_s","isAnalyzing","setIsAnalyzing","analysisResult","setAnalysisResult","error","setError","analyzeUrl","url","result","err","Error","analyzeFile","file","reset"],"sources":["C:/Users/asus/CascadeProjects/poliscan/src/hooks/usePolicyAnalysis.ts"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport { analyzePolicy, analyzePolicyFromUrl, analyzePolicyFromPdf } from '../services/api';\nimport { AnalysisResult } from '../types/analysis';\n\nexport const usePolicyAnalysis = () => {\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [analysisResult, setAnalysisResult] = useState<AnalysisResult | null>(null);\n  const [error, setError] = useState<Error | null>(null);\n\n  const analyzeUrl = useCallback(async (url: string) => {\n    try {\n      setIsAnalyzing(true);\n      setError(null);\n      const result = await analyzePolicyFromUrl(url);\n      setAnalysisResult(result);\n      return result;\n    } catch (err) {\n      const error = err instanceof Error ? err : new Error('Failed to analyze URL');\n      setError(error);\n      throw error;\n    } finally {\n      setIsAnalyzing(false);\n    }\n  }, []);\n\n  const analyzeFile = useCallback(async (file: File) => {\n    try {\n      setIsAnalyzing(true);\n      setError(null);\n      const result = await analyzePolicyFromPdf(file);\n      setAnalysisResult(result);\n      return result;\n    } catch (err) {\n      const error = err instanceof Error ? err : new Error('Failed to analyze file');\n      setError(error);\n      throw error;\n    } finally {\n      setIsAnalyzing(false);\n    }\n  }, []);\n\n  const reset = useCallback(() => {\n    setAnalysisResult(null);\n    setError(null);\n  }, []);\n\n  return {\n    isAnalyzing,\n    analysisResult,\n    error,\n    analyzeUrl,\n    analyzeFile,\n    reset\n  };\n};\n\nexport default usePolicyAnalysis;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAAwBC,oBAAoB,EAAEC,oBAAoB,QAAQ,iBAAiB;AAG3F,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAwB,IAAI,CAAC;EACjF,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAe,IAAI,CAAC;EAEtD,MAAMY,UAAU,GAAGX,WAAW,CAAC,MAAOY,GAAW,IAAK;IACpD,IAAI;MACFN,cAAc,CAAC,IAAI,CAAC;MACpBI,QAAQ,CAAC,IAAI,CAAC;MACd,MAAMG,MAAM,GAAG,MAAMZ,oBAAoB,CAACW,GAAG,CAAC;MAC9CJ,iBAAiB,CAACK,MAAM,CAAC;MACzB,OAAOA,MAAM;IACf,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAML,KAAK,GAAGK,GAAG,YAAYC,KAAK,GAAGD,GAAG,GAAG,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC7EL,QAAQ,CAACD,KAAK,CAAC;MACf,MAAMA,KAAK;IACb,CAAC,SAAS;MACRH,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,WAAW,GAAGhB,WAAW,CAAC,MAAOiB,IAAU,IAAK;IACpD,IAAI;MACFX,cAAc,CAAC,IAAI,CAAC;MACpBI,QAAQ,CAAC,IAAI,CAAC;MACd,MAAMG,MAAM,GAAG,MAAMX,oBAAoB,CAACe,IAAI,CAAC;MAC/CT,iBAAiB,CAACK,MAAM,CAAC;MACzB,OAAOA,MAAM;IACf,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAML,KAAK,GAAGK,GAAG,YAAYC,KAAK,GAAGD,GAAG,GAAG,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC9EL,QAAQ,CAACD,KAAK,CAAC;MACf,MAAMA,KAAK;IACb,CAAC,SAAS;MACRH,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,KAAK,GAAGlB,WAAW,CAAC,MAAM;IAC9BQ,iBAAiB,CAAC,IAAI,CAAC;IACvBE,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLL,WAAW;IACXE,cAAc;IACdE,KAAK;IACLE,UAAU;IACVK,WAAW;IACXE;EACF,CAAC;AACH,CAAC;AAACd,EAAA,CAlDWD,iBAAiB;AAoD9B,eAAeA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}